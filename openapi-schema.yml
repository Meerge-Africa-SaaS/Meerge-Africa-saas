openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/api/v1/User/:
    get:
      operationId: listUsers
      description: ViewSet for the User class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ViewSet for the User class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/api/v1/User/{id}/:
    get:
      operationId: retrieveUser
      description: ViewSet for the User class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ViewSet for the User class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ViewSet for the User class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ViewSet for the User class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/Ingredient/:
    get:
      operationId: listIngredients
      description: ViewSet for the Ingredient class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - api
    post:
      operationId: createIngredient
      description: ViewSet for the Ingredient class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - api
  /api/v1/Ingredient/{id}/:
    get:
      operationId: retrieveIngredient
      description: ViewSet for the Ingredient class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ingredient.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - api
    put:
      operationId: updateIngredient
      description: ViewSet for the Ingredient class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ingredient.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateIngredient
      description: ViewSet for the Ingredient class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ingredient.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyIngredient
      description: ViewSet for the Ingredient class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ingredient.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/Menu/:
    get:
      operationId: listMenus
      description: ViewSet for the Menu class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
          description: ''
      tags:
      - api
    post:
      operationId: createMenu
      description: ViewSet for the Menu class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
      tags:
      - api
  /api/v1/Menu/{id}/:
    get:
      operationId: retrieveMenu
      description: ViewSet for the Menu class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this menu.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
      tags:
      - api
    put:
      operationId: updateMenu
      description: ViewSet for the Menu class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this menu.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateMenu
      description: ViewSet for the Menu class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this menu.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyMenu
      description: ViewSet for the Menu class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this menu.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/MenuItem/:
    get:
      operationId: listMenuItems
      description: ViewSet for the MenuItem class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem'
          description: ''
      tags:
      - api
    post:
      operationId: createMenuItem
      description: ViewSet for the MenuItem class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
      tags:
      - api
  /api/v1/MenuItem/{id}/:
    get:
      operationId: retrieveMenuItem
      description: ViewSet for the MenuItem class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this menu item.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
      tags:
      - api
    put:
      operationId: updateMenuItem
      description: ViewSet for the MenuItem class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this menu item.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateMenuItem
      description: ViewSet for the MenuItem class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this menu item.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyMenuItem
      description: ViewSet for the MenuItem class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this menu item.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/Restaurant/:
    get:
      operationId: listRestaurants
      description: ViewSet for the Restaurant class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
          description: ''
      tags:
      - api
    post:
      operationId: createRestaurant
      description: ViewSet for the Restaurant class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Restaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Restaurant'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
      tags:
      - api
  /api/v1/Restaurant/{id}/:
    get:
      operationId: retrieveRestaurant
      description: ViewSet for the Restaurant class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this restaurant.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
      tags:
      - api
    put:
      operationId: updateRestaurant
      description: ViewSet for the Restaurant class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this restaurant.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Restaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Restaurant'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateRestaurant
      description: ViewSet for the Restaurant class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this restaurant.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Restaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Restaurant'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyRestaurant
      description: ViewSet for the Restaurant class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this restaurant.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/Staff/:
    get:
      operationId: listStaffs
      description: ViewSet for the Staff class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Staff'
          description: ''
      tags:
      - api
    post:
      operationId: createStaff
      description: ViewSet for the Staff class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staff'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
      tags:
      - api
  /api/v1/Staff/{id}/:
    get:
      operationId: retrieveStaff
      description: ViewSet for the Staff class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this staff.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
      tags:
      - api
    put:
      operationId: updateStaff
      description: ViewSet for the Staff class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this staff.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staff'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateStaff
      description: ViewSet for the Staff class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this staff.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staff'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyStaff
      description: ViewSet for the Staff class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this staff.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/User/:
    get:
      operationId: listUsers
      description: ViewSet for the User class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ViewSet for the User class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/v1/User/{id}/:
    get:
      operationId: retrieveUser
      description: ViewSet for the User class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ViewSet for the User class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ViewSet for the User class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ViewSet for the User class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/Order/:
    get:
      operationId: listOrders
      description: ViewSet for the Order class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    post:
      operationId: createOrder
      description: ViewSet for the Order class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
  /api/v1/Order/{id}/:
    get:
      operationId: retrieveOrder
      description: ViewSet for the Order class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this order.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    put:
      operationId: updateOrder
      description: ViewSet for the Order class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateOrder
      description: ViewSet for the Order class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyOrder
      description: ViewSet for the Order class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this order.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/Customer/:
    get:
      operationId: listCustomers
      description: ViewSet for the Customer class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
          description: ''
      tags:
      - api
    post:
      operationId: createCustomer
      description: ViewSet for the Customer class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
      tags:
      - api
  /api/v1/Customer/{id}/:
    get:
      operationId: retrieveCustomer
      description: ViewSet for the Customer class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this customer.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
      tags:
      - api
    put:
      operationId: updateCustomer
      description: ViewSet for the Customer class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this customer.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCustomer
      description: ViewSet for the Customer class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this customer.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCustomer
      description: ViewSet for the Customer class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this customer.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/DeliveryAgent/:
    get:
      operationId: listDeliveryAgents
      description: ViewSet for the DeliveryAgent class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeliveryAgent'
          description: ''
      tags:
      - api
    post:
      operationId: createDeliveryAgent
      description: ViewSet for the DeliveryAgent class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAgent'
          description: ''
      tags:
      - api
  /api/v1/DeliveryAgent/{id}/:
    get:
      operationId: retrieveDeliveryAgent
      description: ViewSet for the DeliveryAgent class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this delivery agent.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAgent'
          description: ''
      tags:
      - api
    put:
      operationId: updateDeliveryAgent
      description: ViewSet for the DeliveryAgent class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this delivery agent.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAgent'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateDeliveryAgent
      description: ViewSet for the DeliveryAgent class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this delivery agent.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAgent'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyDeliveryAgent
      description: ViewSet for the DeliveryAgent class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this delivery agent.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/Category/:
    get:
      operationId: listCategories
      description: ViewSet for the Category class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    post:
      operationId: createCategory
      description: ViewSet for the Category class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
  /api/v1/Category/{id}/:
    get:
      operationId: retrieveCategory
      description: ViewSet for the Category class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    put:
      operationId: updateCategory
      description: ViewSet for the Category class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCategory
      description: ViewSet for the Category class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCategory
      description: ViewSet for the Category class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/Item/:
    get:
      operationId: listItems
      description: ViewSet for the Item class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
          description: ''
      tags:
      - api
    post:
      operationId: createItem
      description: ViewSet for the Item class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
      tags:
      - api
  /api/v1/Item/{id}/:
    get:
      operationId: retrieveItem
      description: ViewSet for the Item class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
      tags:
      - api
    put:
      operationId: updateItem
      description: ViewSet for the Item class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateItem
      description: ViewSet for the Item class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyItem
      description: ViewSet for the Item class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/Stock/:
    get:
      operationId: listStocks
      description: ViewSet for the Stock class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stock'
          description: ''
      tags:
      - api
    post:
      operationId: createStock
      description: ViewSet for the Stock class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stock'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
      tags:
      - api
  /api/v1/Stock/{id}/:
    get:
      operationId: retrieveStock
      description: ViewSet for the Stock class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this stock.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
      tags:
      - api
    put:
      operationId: updateStock
      description: ViewSet for the Stock class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this stock.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stock'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateStock
      description: ViewSet for the Stock class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this stock.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stock'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyStock
      description: ViewSet for the Stock class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this stock.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/Supplier/:
    get:
      operationId: listSuppliers
      description: ViewSet for the Supplier class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'
          description: ''
      tags:
      - api
    post:
      operationId: createSupplier
      description: ViewSet for the Supplier class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
      tags:
      - api
  /api/v1/Supplier/{id}/:
    get:
      operationId: retrieveSupplier
      description: ViewSet for the Supplier class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this supplier.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
      tags:
      - api
    put:
      operationId: updateSupplier
      description: ViewSet for the Supplier class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this supplier.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSupplier
      description: ViewSet for the Supplier class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this supplier.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySupplier
      description: ViewSet for the Supplier class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this supplier.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/v1/SupplyManager/:
    get:
      operationId: listSupplyManagers
      description: ViewSet for the SupplyManager class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplyManager'
          description: ''
      tags:
      - api
    post:
      operationId: createSupplyManager
      description: ViewSet for the SupplyManager class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplyManager'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyManager'
          description: ''
      tags:
      - api
  /api/v1/SupplyManager/{id}/:
    get:
      operationId: retrieveSupplyManager
      description: ViewSet for the SupplyManager class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this supply manager.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyManager'
          description: ''
      tags:
      - api
    put:
      operationId: updateSupplyManager
      description: ViewSet for the SupplyManager class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this supply manager.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplyManager'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyManager'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSupplyManager
      description: ViewSet for the SupplyManager class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this supply manager.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplyManager'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyManager'
          description: ''
      tags:
      - api
    delete:
      operationId: destroySupplyManager
      description: ViewSet for the SupplyManager class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this supply manager.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /restaurant/api/v1/Ingredient/:
    get:
      operationId: listIngredients
      description: ViewSet for the Ingredient class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - restaurant
    post:
      operationId: createIngredient
      description: ViewSet for the Ingredient class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - restaurant
  /restaurant/api/v1/Ingredient/{id}/:
    get:
      operationId: retrieveIngredient
      description: ViewSet for the Ingredient class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ingredient.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - restaurant
    put:
      operationId: updateIngredient
      description: ViewSet for the Ingredient class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ingredient.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - restaurant
    patch:
      operationId: partialUpdateIngredient
      description: ViewSet for the Ingredient class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ingredient.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
      tags:
      - restaurant
    delete:
      operationId: destroyIngredient
      description: ViewSet for the Ingredient class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this ingredient.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - restaurant
  /restaurant/api/v1/Menu/:
    get:
      operationId: listMenus
      description: ViewSet for the Menu class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
          description: ''
      tags:
      - restaurant
    post:
      operationId: createMenu
      description: ViewSet for the Menu class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
      tags:
      - restaurant
  /restaurant/api/v1/Menu/{id}/:
    get:
      operationId: retrieveMenu
      description: ViewSet for the Menu class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this menu.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
      tags:
      - restaurant
    put:
      operationId: updateMenu
      description: ViewSet for the Menu class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this menu.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
      tags:
      - restaurant
    patch:
      operationId: partialUpdateMenu
      description: ViewSet for the Menu class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this menu.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
      tags:
      - restaurant
    delete:
      operationId: destroyMenu
      description: ViewSet for the Menu class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this menu.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - restaurant
  /restaurant/api/v1/MenuItem/:
    get:
      operationId: listMenuItems
      description: ViewSet for the MenuItem class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem'
          description: ''
      tags:
      - restaurant
    post:
      operationId: createMenuItem
      description: ViewSet for the MenuItem class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
      tags:
      - restaurant
  /restaurant/api/v1/MenuItem/{id}/:
    get:
      operationId: retrieveMenuItem
      description: ViewSet for the MenuItem class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this menu item.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
      tags:
      - restaurant
    put:
      operationId: updateMenuItem
      description: ViewSet for the MenuItem class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this menu item.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
      tags:
      - restaurant
    patch:
      operationId: partialUpdateMenuItem
      description: ViewSet for the MenuItem class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this menu item.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
      tags:
      - restaurant
    delete:
      operationId: destroyMenuItem
      description: ViewSet for the MenuItem class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this menu item.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - restaurant
  /restaurant/api/v1/Restaurant/:
    get:
      operationId: listRestaurants
      description: ViewSet for the Restaurant class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
          description: ''
      tags:
      - restaurant
    post:
      operationId: createRestaurant
      description: ViewSet for the Restaurant class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Restaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Restaurant'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
      tags:
      - restaurant
  /restaurant/api/v1/Restaurant/{id}/:
    get:
      operationId: retrieveRestaurant
      description: ViewSet for the Restaurant class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this restaurant.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
      tags:
      - restaurant
    put:
      operationId: updateRestaurant
      description: ViewSet for the Restaurant class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this restaurant.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Restaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Restaurant'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
      tags:
      - restaurant
    patch:
      operationId: partialUpdateRestaurant
      description: ViewSet for the Restaurant class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this restaurant.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Restaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Restaurant'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
      tags:
      - restaurant
    delete:
      operationId: destroyRestaurant
      description: ViewSet for the Restaurant class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this restaurant.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - restaurant
  /restaurant/api/v1/Staff/:
    get:
      operationId: listStaffs
      description: ViewSet for the Staff class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Staff'
          description: ''
      tags:
      - restaurant
    post:
      operationId: createStaff
      description: ViewSet for the Staff class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staff'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
      tags:
      - restaurant
  /restaurant/api/v1/Staff/{id}/:
    get:
      operationId: retrieveStaff
      description: ViewSet for the Staff class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this staff.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
      tags:
      - restaurant
    put:
      operationId: updateStaff
      description: ViewSet for the Staff class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this staff.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staff'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
      tags:
      - restaurant
    patch:
      operationId: partialUpdateStaff
      description: ViewSet for the Staff class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this staff.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staff'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
      tags:
      - restaurant
    delete:
      operationId: destroyStaff
      description: ViewSet for the Staff class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this staff.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - restaurant
  /inventory/api/v1/Category/:
    get:
      operationId: listCategories
      description: ViewSet for the Category class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - inventory
    post:
      operationId: createCategory
      description: ViewSet for the Category class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - inventory
  /inventory/api/v1/Category/{id}/:
    get:
      operationId: retrieveCategory
      description: ViewSet for the Category class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - inventory
    put:
      operationId: updateCategory
      description: ViewSet for the Category class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - inventory
    patch:
      operationId: partialUpdateCategory
      description: ViewSet for the Category class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
      tags:
      - inventory
    delete:
      operationId: destroyCategory
      description: ViewSet for the Category class
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this category.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - inventory
  /inventory/api/v1/Item/:
    get:
      operationId: listItems
      description: ViewSet for the Item class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
          description: ''
      tags:
      - inventory
    post:
      operationId: createItem
      description: ViewSet for the Item class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
      tags:
      - inventory
  /inventory/api/v1/Item/{id}/:
    get:
      operationId: retrieveItem
      description: ViewSet for the Item class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
      tags:
      - inventory
    put:
      operationId: updateItem
      description: ViewSet for the Item class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
      tags:
      - inventory
    patch:
      operationId: partialUpdateItem
      description: ViewSet for the Item class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
      tags:
      - inventory
    delete:
      operationId: destroyItem
      description: ViewSet for the Item class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this item.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - inventory
  /inventory/api/v1/Stock/:
    get:
      operationId: listStocks
      description: ViewSet for the Stock class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stock'
          description: ''
      tags:
      - inventory
    post:
      operationId: createStock
      description: ViewSet for the Stock class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stock'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
      tags:
      - inventory
  /inventory/api/v1/Stock/{id}/:
    get:
      operationId: retrieveStock
      description: ViewSet for the Stock class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this stock.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
      tags:
      - inventory
    put:
      operationId: updateStock
      description: ViewSet for the Stock class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this stock.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stock'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
      tags:
      - inventory
    patch:
      operationId: partialUpdateStock
      description: ViewSet for the Stock class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this stock.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stock'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
      tags:
      - inventory
    delete:
      operationId: destroyStock
      description: ViewSet for the Stock class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this stock.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - inventory
  /inventory/api/v1/Supplier/:
    get:
      operationId: listSuppliers
      description: ViewSet for the Supplier class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'
          description: ''
      tags:
      - inventory
    post:
      operationId: createSupplier
      description: ViewSet for the Supplier class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
      tags:
      - inventory
  /inventory/api/v1/Supplier/{id}/:
    get:
      operationId: retrieveSupplier
      description: ViewSet for the Supplier class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this supplier.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
      tags:
      - inventory
    put:
      operationId: updateSupplier
      description: ViewSet for the Supplier class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this supplier.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
      tags:
      - inventory
    patch:
      operationId: partialUpdateSupplier
      description: ViewSet for the Supplier class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this supplier.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
      tags:
      - inventory
    delete:
      operationId: destroySupplier
      description: ViewSet for the Supplier class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this supplier.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - inventory
  /inventory/api/v1/SupplyManager/:
    get:
      operationId: listSupplyManagers
      description: ViewSet for the SupplyManager class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplyManager'
          description: ''
      tags:
      - inventory
    post:
      operationId: createSupplyManager
      description: ViewSet for the SupplyManager class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplyManager'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyManager'
          description: ''
      tags:
      - inventory
  /inventory/api/v1/SupplyManager/{id}/:
    get:
      operationId: retrieveSupplyManager
      description: ViewSet for the SupplyManager class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this supply manager.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyManager'
          description: ''
      tags:
      - inventory
    put:
      operationId: updateSupplyManager
      description: ViewSet for the SupplyManager class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this supply manager.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplyManager'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyManager'
          description: ''
      tags:
      - inventory
    patch:
      operationId: partialUpdateSupplyManager
      description: ViewSet for the SupplyManager class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this supply manager.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplyManager'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyManager'
          description: ''
      tags:
      - inventory
    delete:
      operationId: destroySupplyManager
      description: ViewSet for the SupplyManager class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this supply manager.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - inventory
  /inventory/stock/admin/products/:
    get:
      operationId: listAdminStocks
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - inventory
  /inventory/api/admin/products/:
    get:
      operationId: listAdminStockListApis
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - inventory
  /inventory/supplier/{supplier_id}/products/:
    get:
      operationId: listSupplierStocks
      description: ''
      parameters:
      - name: supplier_id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - inventory
  /inventory/api/stock-details/:
    get:
      operationId: listStocks
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stock'
          description: ''
      tags:
      - inventory
  /orders/api/v1/DeliveryAgent/:
    get:
      operationId: listDeliveryAgents
      description: ViewSet for the DeliveryAgent class
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeliveryAgent'
          description: ''
      tags:
      - orders
    post:
      operationId: createDeliveryAgent
      description: ViewSet for the DeliveryAgent class
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAgent'
          description: ''
      tags:
      - orders
  /orders/api/v1/DeliveryAgent/{id}/:
    get:
      operationId: retrieveDeliveryAgent
      description: ViewSet for the DeliveryAgent class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this delivery agent.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAgent'
          description: ''
      tags:
      - orders
    put:
      operationId: updateDeliveryAgent
      description: ViewSet for the DeliveryAgent class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this delivery agent.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAgent'
          description: ''
      tags:
      - orders
    patch:
      operationId: partialUpdateDeliveryAgent
      description: ViewSet for the DeliveryAgent class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this delivery agent.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAgent'
          description: ''
      tags:
      - orders
    delete:
      operationId: destroyDeliveryAgent
      description: ViewSet for the DeliveryAgent class
      parameters:
      - name: id
        in: path
        required: true
        description: A UUID string identifying this delivery agent.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - orders
  /inventory/api/stock-create:
    post:
      operationId: createStock
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stock'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
      tags:
      - inventory
  /inventory/api/stores/create/:
    post:
      operationId: createCreateStore
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - inventory
components:
  schemas:
    User:
      type: object
      properties:
        last_updated:
          type: string
          format: date-time
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 256
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          nullable: true
          pattern: ^[a-zA-Z0-9.@_]*$
          maxLength: 50
      required:
      - email
    Ingredient:
      type: object
      properties:
        last_updated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 30
        created:
          type: string
          format: date-time
          readOnly: true
        menu_item:
          type: array
          items:
            type: integer
      required:
      - name
      - menu_item
    Menu:
      type: object
      properties:
        date_from:
          type: string
          format: date
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 30
        date_to:
          type: string
          format: date
        last_updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_from
      - name
      - date_to
    MenuItem:
      type: object
      properties:
        name:
          type: string
          maxLength: 30
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        menu:
          type: integer
      required:
      - name
      - price
      - menu
    Restaurant:
      type: object
      properties:
        address:
          type: string
          maxLength: 130
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 30
        last_updated:
          type: string
          format: date-time
          readOnly: true
        city:
          type: integer
          nullable: true
        owner:
          type: array
          items:
            type: string
      required:
      - address
      - name
      - owner
    Staff:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        restaurants:
          type: integer
          nullable: true
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        delivery_address:
          type: string
          maxLength: 130
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - delivery_address
    Customer:
      type: object
      properties:
        last_name:
          type: string
          maxLength: 150
        last_updated:
          type: string
          format: date-time
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        address:
          type: string
          maxLength: 130
        first_name:
          type: string
          maxLength: 150
        city:
          type: integer
          nullable: true
      required:
      - address
    DeliveryAgent:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
    Category:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 30
        last_updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - name
    Item:
      type: object
      properties:
        last_updated:
          type: string
          format: date-time
          readOnly: true
        unit_of_measure:
          type: string
          maxLength: 30
        name:
          type: string
          maxLength: 30
        id:
          type: string
          format: uuid
          readOnly: true
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
        created:
          type: string
          format: date-time
          readOnly: true
        expiry_date:
          type: string
          format: date
        category:
          type: integer
        supplier:
          type: string
      required:
      - unit_of_measure
      - name
      - price
      - expiry_date
      - category
      - supplier
    Stock:
      type: object
      properties:
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        last_updated:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        item:
          type: string
        SKU_number:
          type: string
          nullable: true
          maxLength: 60
        product_name:
          type: string
          nullable: true
          maxLength: 60
        product_image:
          type: string
          format: binary
        product_category:
          type: string
          nullable: true
          maxLength: 60
        manufacture_name:
          type: string
          nullable: true
          maxLength: 60
        price:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: -100000000
          nullable: true
        unit_available:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: 0
          nullable: true
        size:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: 0
          nullable: true
        weight:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: 0
          nullable: true
        discount_percentage:
          type: string
          format: decimal
          multipleOf: 0.01
          maximum: 100000000
          minimum: 0
          nullable: true
      required:
      - quantity
      - item
    Supplier:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 30
        last_updated:
          type: string
          format: date-time
          readOnly: true
        city:
          type: array
          items:
            type: integer
      required:
      - name
      - city
    SupplyManager:
      type: object
      properties:
        last_updated:
          type: string
          format: date-time
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        supplier:
          type: string
      required:
      - supplier
