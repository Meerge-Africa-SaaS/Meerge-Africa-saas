openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /admin/api/main/documents/:
    get:
      operationId: admin_api_main_documents_retrieve
      tags:
      - admin
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/documents/{id}/:
    get:
      operationId: admin_api_main_documents_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - admin
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/documents/find/:
    get:
      operationId: admin_api_main_documents_find_retrieve
      tags:
      - admin
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/images/:
    get:
      operationId: admin_api_main_images_retrieve
      tags:
      - admin
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/images/{id}/:
    get:
      operationId: admin_api_main_images_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - admin
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/images/find/:
    get:
      operationId: admin_api_main_images_find_retrieve
      tags:
      - admin
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/pages/:
    get:
      operationId: admin_api_main_pages_retrieve
      tags:
      - admin
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/pages/{id}/:
    get:
      operationId: admin_api_main_pages_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - admin
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/pages/{id}/action/{action_name}/:
    post:
      operationId: admin_api_main_pages_action_create
      parameters:
      - in: path
        name: action_name
        schema:
          type: string
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - admin
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /admin/api/main/pages/find/:
    get:
      operationId: admin_api_main_pages_find_retrieve
      tags:
      - admin
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/api/v1/User/:
    get:
      operationId: api_api_v1_User_list
      description: ViewSet for the User class
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_api_v1_User_create
      description: ViewSet for the User class
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/api/v1/User/{id}/:
    get:
      operationId: api_api_v1_User_retrieve
      description: ViewSet for the User class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_api_v1_User_update
      description: ViewSet for the User class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_api_v1_User_partial_update
      description: ViewSet for the User class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_api_v1_User_destroy
      description: ViewSet for the User class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/Category/:
    get:
      operationId: api_v1_Category_list
      description: ViewSet for the Category class
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: api_v1_Category_create
      description: ViewSet for the Category class
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/v1/Category/{id}/:
    get:
      operationId: api_v1_Category_retrieve
      description: ViewSet for the Category class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: api_v1_Category_update
      description: ViewSet for the Category class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: api_v1_Category_partial_update
      description: ViewSet for the Category class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: api_v1_Category_destroy
      description: ViewSet for the Category class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/Customer/:
    get:
      operationId: api_v1_Customer_list
      description: ViewSet for the Customer class
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
          description: ''
    post:
      operationId: api_v1_Customer_create
      description: ViewSet for the Customer class
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /api/v1/Customer/{id}/:
    get:
      operationId: api_v1_Customer_retrieve
      description: ViewSet for the Customer class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this customer.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    put:
      operationId: api_v1_Customer_update
      description: ViewSet for the Customer class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this customer.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    patch:
      operationId: api_v1_Customer_partial_update
      description: ViewSet for the Customer class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this customer.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    delete:
      operationId: api_v1_Customer_destroy
      description: ViewSet for the Customer class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this customer.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/DeliveryAgent/:
    get:
      operationId: api_v1_DeliveryAgent_list
      description: ViewSet for the DeliveryAgent class
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeliveryAgent'
          description: ''
    post:
      operationId: api_v1_DeliveryAgent_create
      description: ViewSet for the DeliveryAgent class
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAgent'
          description: ''
  /api/v1/DeliveryAgent/{id}/:
    get:
      operationId: api_v1_DeliveryAgent_retrieve
      description: ViewSet for the DeliveryAgent class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this delivery agent.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAgent'
          description: ''
    put:
      operationId: api_v1_DeliveryAgent_update
      description: ViewSet for the DeliveryAgent class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this delivery agent.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAgent'
          description: ''
    patch:
      operationId: api_v1_DeliveryAgent_partial_update
      description: ViewSet for the DeliveryAgent class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this delivery agent.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeliveryAgent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeliveryAgent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeliveryAgent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAgent'
          description: ''
    delete:
      operationId: api_v1_DeliveryAgent_destroy
      description: ViewSet for the DeliveryAgent class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this delivery agent.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/Ingredient/:
    get:
      operationId: api_v1_Ingredient_list
      description: ViewSet for the Ingredient class
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
          description: ''
    post:
      operationId: api_v1_Ingredient_create
      description: ViewSet for the Ingredient class
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
  /api/v1/Ingredient/{id}/:
    get:
      operationId: api_v1_Ingredient_retrieve
      description: ViewSet for the Ingredient class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
    put:
      operationId: api_v1_Ingredient_update
      description: ViewSet for the Ingredient class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
    patch:
      operationId: api_v1_Ingredient_partial_update
      description: ViewSet for the Ingredient class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIngredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIngredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIngredient'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
    delete:
      operationId: api_v1_Ingredient_destroy
      description: ViewSet for the Ingredient class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/Item/:
    get:
      operationId: api_v1_Item_list
      description: ViewSet for the Item class
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
          description: ''
    post:
      operationId: api_v1_Item_create
      description: ViewSet for the Item class
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
  /api/v1/Item/{id}/:
    get:
      operationId: api_v1_Item_retrieve
      description: ViewSet for the Item class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this item.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    put:
      operationId: api_v1_Item_update
      description: ViewSet for the Item class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this item.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    patch:
      operationId: api_v1_Item_partial_update
      description: ViewSet for the Item class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this item.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedItem'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    delete:
      operationId: api_v1_Item_destroy
      description: ViewSet for the Item class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this item.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/Menu/:
    get:
      operationId: api_v1_Menu_list
      description: ViewSet for the Menu class
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
          description: ''
    post:
      operationId: api_v1_Menu_create
      description: ViewSet for the Menu class
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
  /api/v1/Menu/{id}/:
    get:
      operationId: api_v1_Menu_retrieve
      description: ViewSet for the Menu class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    put:
      operationId: api_v1_Menu_update
      description: ViewSet for the Menu class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    patch:
      operationId: api_v1_Menu_partial_update
      description: ViewSet for the Menu class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    delete:
      operationId: api_v1_Menu_destroy
      description: ViewSet for the Menu class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/MenuItem/:
    get:
      operationId: api_v1_MenuItem_list
      description: ViewSet for the MenuItem class
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem'
          description: ''
    post:
      operationId: api_v1_MenuItem_create
      description: ViewSet for the MenuItem class
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
  /api/v1/MenuItem/{id}/:
    get:
      operationId: api_v1_MenuItem_retrieve
      description: ViewSet for the MenuItem class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu item.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    put:
      operationId: api_v1_MenuItem_update
      description: ViewSet for the MenuItem class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu item.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    patch:
      operationId: api_v1_MenuItem_partial_update
      description: ViewSet for the MenuItem class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu item.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    delete:
      operationId: api_v1_MenuItem_destroy
      description: ViewSet for the MenuItem class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu item.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/Order/:
    get:
      operationId: api_v1_Order_list
      description: ViewSet for the Order class
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: api_v1_Order_create
      description: ViewSet for the Order class
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/v1/Order/{id}/:
    get:
      operationId: api_v1_Order_retrieve
      description: ViewSet for the Order class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: api_v1_Order_update
      description: ViewSet for the Order class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: api_v1_Order_partial_update
      description: ViewSet for the Order class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: api_v1_Order_destroy
      description: ViewSet for the Order class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/Restaurant/:
    get:
      operationId: api_v1_Restaurant_list
      description: ViewSet for the Restaurant class
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
          description: ''
    post:
      operationId: api_v1_Restaurant_create
      description: ViewSet for the Restaurant class
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Restaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Restaurant'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
  /api/v1/Restaurant/{id}/:
    get:
      operationId: api_v1_Restaurant_retrieve
      description: ViewSet for the Restaurant class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
    put:
      operationId: api_v1_Restaurant_update
      description: ViewSet for the Restaurant class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Restaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Restaurant'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
    patch:
      operationId: api_v1_Restaurant_partial_update
      description: ViewSet for the Restaurant class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRestaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRestaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRestaurant'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
    delete:
      operationId: api_v1_Restaurant_destroy
      description: ViewSet for the Restaurant class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/Staff/:
    get:
      operationId: api_v1_Staff_list
      description: ViewSet for the Staff class
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Staff'
          description: ''
    post:
      operationId: api_v1_Staff_create
      description: ViewSet for the Staff class
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staff'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
  /api/v1/Staff/{id}/:
    get:
      operationId: api_v1_Staff_retrieve
      description: ViewSet for the Staff class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this staff.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
    put:
      operationId: api_v1_Staff_update
      description: ViewSet for the Staff class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this staff.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staff'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
    patch:
      operationId: api_v1_Staff_partial_update
      description: ViewSet for the Staff class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this staff.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaff'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
    delete:
      operationId: api_v1_Staff_destroy
      description: ViewSet for the Staff class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this staff.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/Stock/:
    get:
      operationId: api_v1_Stock_list
      description: ViewSet for the Stock class
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stock'
          description: ''
    post:
      operationId: api_v1_Stock_create
      description: ViewSet for the Stock class
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stock'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
  /api/v1/Stock/{id}/:
    get:
      operationId: api_v1_Stock_retrieve
      description: ViewSet for the Stock class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this stock.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
    put:
      operationId: api_v1_Stock_update
      description: ViewSet for the Stock class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this stock.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stock'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
    patch:
      operationId: api_v1_Stock_partial_update
      description: ViewSet for the Stock class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this stock.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStock'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
    delete:
      operationId: api_v1_Stock_destroy
      description: ViewSet for the Stock class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this stock.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/Supplier/:
    get:
      operationId: api_v1_Supplier_list
      description: ViewSet for the Supplier class
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'
          description: ''
    post:
      operationId: api_v1_Supplier_create
      description: ViewSet for the Supplier class
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
  /api/v1/Supplier/{id}/:
    get:
      operationId: api_v1_Supplier_retrieve
      description: ViewSet for the Supplier class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supplier.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    put:
      operationId: api_v1_Supplier_update
      description: ViewSet for the Supplier class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supplier.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    patch:
      operationId: api_v1_Supplier_partial_update
      description: ViewSet for the Supplier class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supplier.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    delete:
      operationId: api_v1_Supplier_destroy
      description: ViewSet for the Supplier class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supplier.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/SupplyManager/:
    get:
      operationId: api_v1_SupplyManager_list
      description: ViewSet for the SupplyManager class
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplyManager'
          description: ''
    post:
      operationId: api_v1_SupplyManager_create
      description: ViewSet for the SupplyManager class
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplyManager'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyManager'
          description: ''
  /api/v1/SupplyManager/{id}/:
    get:
      operationId: api_v1_SupplyManager_retrieve
      description: ViewSet for the SupplyManager class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supply manager.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyManager'
          description: ''
    put:
      operationId: api_v1_SupplyManager_update
      description: ViewSet for the SupplyManager class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supply manager.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplyManager'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyManager'
          description: ''
    patch:
      operationId: api_v1_SupplyManager_partial_update
      description: ViewSet for the SupplyManager class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supply manager.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplyManager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplyManager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplyManager'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyManager'
          description: ''
    delete:
      operationId: api_v1_SupplyManager_destroy
      description: ViewSet for the SupplyManager class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supply manager.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/User/:
    get:
      operationId: api_v1_User_list
      description: ViewSet for the User class
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: api_v1_User_create
      description: ViewSet for the User class
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/User/{id}/:
    get:
      operationId: api_v1_User_retrieve
      description: ViewSet for the User class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_v1_User_update
      description: ViewSet for the User class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_v1_User_partial_update
      description: ViewSet for the User class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_v1_User_destroy
      description: ViewSet for the User class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /customers/api/v1/Customer/:
    get:
      operationId: customers_api_v1_Customer_list
      description: ViewSet for the Customer class
      tags:
      - customers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
          description: ''
    post:
      operationId: customers_api_v1_Customer_create
      description: ViewSet for the Customer class
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /customers/api/v1/Customer/{id}/:
    get:
      operationId: customers_api_v1_Customer_retrieve
      description: ViewSet for the Customer class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this customer.
        required: true
      tags:
      - customers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    put:
      operationId: customers_api_v1_Customer_update
      description: ViewSet for the Customer class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this customer.
        required: true
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    patch:
      operationId: customers_api_v1_Customer_partial_update
      description: ViewSet for the Customer class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this customer.
        required: true
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    delete:
      operationId: customers_api_v1_Customer_destroy
      description: ViewSet for the Customer class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this customer.
        required: true
      tags:
      - customers
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /customers/api/v1/Order/:
    get:
      operationId: customers_api_v1_Order_list
      description: ViewSet for the Order class
      tags:
      - customers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
    post:
      operationId: customers_api_v1_Order_create
      description: ViewSet for the Order class
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /customers/api/v1/Order/{id}/:
    get:
      operationId: customers_api_v1_Order_retrieve
      description: ViewSet for the Order class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - customers
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    put:
      operationId: customers_api_v1_Order_update
      description: ViewSet for the Order class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Order'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    patch:
      operationId: customers_api_v1_Order_partial_update
      description: ViewSet for the Order class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - customers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrder'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
    delete:
      operationId: customers_api_v1_Order_destroy
      description: ViewSet for the Order class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this order.
        required: true
      tags:
      - customers
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /inventory/api/admin/products/:
    get:
      operationId: inventory_api_admin_products_retrieve
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /inventory/api/stock-create:
    post:
      operationId: inventory_api_stock_create_create
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stock'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
  /inventory/api/stock-details/:
    get:
      operationId: inventory_api_stock_details_list
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stock'
          description: ''
  /inventory/api/stores/create/:
    post:
      operationId: inventory_api_stores_create_create
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /inventory/api/v1/Category/:
    get:
      operationId: inventory_api_v1_Category_list
      description: ViewSet for the Category class
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: inventory_api_v1_Category_create
      description: ViewSet for the Category class
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /inventory/api/v1/Category/{id}/:
    get:
      operationId: inventory_api_v1_Category_retrieve
      description: ViewSet for the Category class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: inventory_api_v1_Category_update
      description: ViewSet for the Category class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: inventory_api_v1_Category_partial_update
      description: ViewSet for the Category class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: inventory_api_v1_Category_destroy
      description: ViewSet for the Category class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /inventory/api/v1/Item/:
    get:
      operationId: inventory_api_v1_Item_list
      description: ViewSet for the Item class
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
          description: ''
    post:
      operationId: inventory_api_v1_Item_create
      description: ViewSet for the Item class
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
  /inventory/api/v1/Item/{id}/:
    get:
      operationId: inventory_api_v1_Item_retrieve
      description: ViewSet for the Item class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this item.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    put:
      operationId: inventory_api_v1_Item_update
      description: ViewSet for the Item class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this item.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Item'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Item'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Item'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    patch:
      operationId: inventory_api_v1_Item_partial_update
      description: ViewSet for the Item class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this item.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedItem'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    delete:
      operationId: inventory_api_v1_Item_destroy
      description: ViewSet for the Item class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this item.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /inventory/api/v1/Stock/:
    get:
      operationId: inventory_api_v1_Stock_list
      description: ViewSet for the Stock class
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stock'
          description: ''
    post:
      operationId: inventory_api_v1_Stock_create
      description: ViewSet for the Stock class
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stock'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
  /inventory/api/v1/Stock/{id}/:
    get:
      operationId: inventory_api_v1_Stock_retrieve
      description: ViewSet for the Stock class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this stock.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
    put:
      operationId: inventory_api_v1_Stock_update
      description: ViewSet for the Stock class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this stock.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stock'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
    patch:
      operationId: inventory_api_v1_Stock_partial_update
      description: ViewSet for the Stock class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this stock.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStock'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
    delete:
      operationId: inventory_api_v1_Stock_destroy
      description: ViewSet for the Stock class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this stock.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /inventory/api/v1/Supplier/:
    get:
      operationId: inventory_api_v1_Supplier_list
      description: ViewSet for the Supplier class
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'
          description: ''
    post:
      operationId: inventory_api_v1_Supplier_create
      description: ViewSet for the Supplier class
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
  /inventory/api/v1/Supplier/{id}/:
    get:
      operationId: inventory_api_v1_Supplier_retrieve
      description: ViewSet for the Supplier class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supplier.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    put:
      operationId: inventory_api_v1_Supplier_update
      description: ViewSet for the Supplier class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supplier.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    patch:
      operationId: inventory_api_v1_Supplier_partial_update
      description: ViewSet for the Supplier class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supplier.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supplier'
          description: ''
    delete:
      operationId: inventory_api_v1_Supplier_destroy
      description: ViewSet for the Supplier class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supplier.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /inventory/api/v1/SupplyManager/:
    get:
      operationId: inventory_api_v1_SupplyManager_list
      description: ViewSet for the SupplyManager class
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplyManager'
          description: ''
    post:
      operationId: inventory_api_v1_SupplyManager_create
      description: ViewSet for the SupplyManager class
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplyManager'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyManager'
          description: ''
  /inventory/api/v1/SupplyManager/{id}/:
    get:
      operationId: inventory_api_v1_SupplyManager_retrieve
      description: ViewSet for the SupplyManager class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supply manager.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyManager'
          description: ''
    put:
      operationId: inventory_api_v1_SupplyManager_update
      description: ViewSet for the SupplyManager class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supply manager.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplyManager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplyManager'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyManager'
          description: ''
    patch:
      operationId: inventory_api_v1_SupplyManager_partial_update
      description: ViewSet for the SupplyManager class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supply manager.
        required: true
      tags:
      - inventory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplyManager'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplyManager'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplyManager'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyManager'
          description: ''
    delete:
      operationId: inventory_api_v1_SupplyManager_destroy
      description: ViewSet for the SupplyManager class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this supply manager.
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /inventory/create-category-item/{stock_id}/:
    post:
      operationId: inventory_create_category_item_create
      parameters:
      - in: path
        name: stock_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /inventory/stock-details/{item_id}/:
    get:
      operationId: inventory_stock_details_retrieve
      parameters:
      - in: path
        name: item_id
        schema:
          type: integer
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /inventory/stock/admin/products/:
    get:
      operationId: inventory_stock_admin_products_retrieve
      tags:
      - inventory
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /inventory/supplier/{supplier_id}/products/:
    get:
      operationId: inventory_supplier_products_retrieve
      parameters:
      - in: path
        name: supplier_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - inventory
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /inventory/supplier/profile/update/:
    put:
      operationId: inventory_supplier_profile_update_update
      tags:
      - inventory
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /orders/api/v1/DeliveryAgent/:
    get:
      operationId: orders_api_v1_DeliveryAgent_list
      description: ViewSet for the DeliveryAgent class
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DeliveryAgent'
          description: ''
    post:
      operationId: orders_api_v1_DeliveryAgent_create
      description: ViewSet for the DeliveryAgent class
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAgent'
          description: ''
  /orders/api/v1/DeliveryAgent/{id}/:
    get:
      operationId: orders_api_v1_DeliveryAgent_retrieve
      description: ViewSet for the DeliveryAgent class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this delivery agent.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAgent'
          description: ''
    put:
      operationId: orders_api_v1_DeliveryAgent_update
      description: ViewSet for the DeliveryAgent class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this delivery agent.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeliveryAgent'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAgent'
          description: ''
    patch:
      operationId: orders_api_v1_DeliveryAgent_partial_update
      description: ViewSet for the DeliveryAgent class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this delivery agent.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDeliveryAgent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDeliveryAgent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDeliveryAgent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryAgent'
          description: ''
    delete:
      operationId: orders_api_v1_DeliveryAgent_destroy
      description: ViewSet for the DeliveryAgent class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this delivery agent.
        required: true
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /orders/delivery-agent/profile/update/:
    put:
      operationId: orders_delivery_agent_profile_update_update
      tags:
      - orders
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /restaurant/api/v1/Ingredient/:
    get:
      operationId: restaurant_api_v1_Ingredient_list
      description: ViewSet for the Ingredient class
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ingredient'
          description: ''
    post:
      operationId: restaurant_api_v1_Ingredient_create
      description: ViewSet for the Ingredient class
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
  /restaurant/api/v1/Ingredient/{id}/:
    get:
      operationId: restaurant_api_v1_Ingredient_retrieve
      description: ViewSet for the Ingredient class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
    put:
      operationId: restaurant_api_v1_Ingredient_update
      description: ViewSet for the Ingredient class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ingredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ingredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ingredient'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
    patch:
      operationId: restaurant_api_v1_Ingredient_partial_update
      description: ViewSet for the Ingredient class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedIngredient'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedIngredient'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedIngredient'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ingredient'
          description: ''
    delete:
      operationId: restaurant_api_v1_Ingredient_destroy
      description: ViewSet for the Ingredient class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this ingredient.
        required: true
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /restaurant/api/v1/Menu/:
    get:
      operationId: restaurant_api_v1_Menu_list
      description: ViewSet for the Menu class
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Menu'
          description: ''
    post:
      operationId: restaurant_api_v1_Menu_create
      description: ViewSet for the Menu class
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
  /restaurant/api/v1/Menu/{id}/:
    get:
      operationId: restaurant_api_v1_Menu_retrieve
      description: ViewSet for the Menu class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    put:
      operationId: restaurant_api_v1_Menu_update
      description: ViewSet for the Menu class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Menu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Menu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Menu'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    patch:
      operationId: restaurant_api_v1_Menu_partial_update
      description: ViewSet for the Menu class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMenu'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
          description: ''
    delete:
      operationId: restaurant_api_v1_Menu_destroy
      description: ViewSet for the Menu class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu.
        required: true
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /restaurant/api/v1/MenuItem/:
    get:
      operationId: restaurant_api_v1_MenuItem_list
      description: ViewSet for the MenuItem class
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MenuItem'
          description: ''
    post:
      operationId: restaurant_api_v1_MenuItem_create
      description: ViewSet for the MenuItem class
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
  /restaurant/api/v1/MenuItem/{id}/:
    get:
      operationId: restaurant_api_v1_MenuItem_retrieve
      description: ViewSet for the MenuItem class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu item.
        required: true
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    put:
      operationId: restaurant_api_v1_MenuItem_update
      description: ViewSet for the MenuItem class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu item.
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MenuItem'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    patch:
      operationId: restaurant_api_v1_MenuItem_partial_update
      description: ViewSet for the MenuItem class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu item.
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMenuItem'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MenuItem'
          description: ''
    delete:
      operationId: restaurant_api_v1_MenuItem_destroy
      description: ViewSet for the MenuItem class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this menu item.
        required: true
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /restaurant/api/v1/Restaurant/:
    get:
      operationId: restaurant_api_v1_Restaurant_list
      description: ViewSet for the Restaurant class
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
          description: ''
    post:
      operationId: restaurant_api_v1_Restaurant_create
      description: ViewSet for the Restaurant class
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Restaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Restaurant'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
  /restaurant/api/v1/Restaurant/{id}/:
    get:
      operationId: restaurant_api_v1_Restaurant_retrieve
      description: ViewSet for the Restaurant class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant.
        required: true
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
    put:
      operationId: restaurant_api_v1_Restaurant_update
      description: ViewSet for the Restaurant class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant.
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Restaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Restaurant'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
    patch:
      operationId: restaurant_api_v1_Restaurant_partial_update
      description: ViewSet for the Restaurant class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant.
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRestaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRestaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRestaurant'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
    delete:
      operationId: restaurant_api_v1_Restaurant_destroy
      description: ViewSet for the Restaurant class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant.
        required: true
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /restaurant/api/v1/RestaurantStock/:
    get:
      operationId: restaurant_api_v1_RestaurantStock_list
      description: ViewSet for the Restaurant's Store class
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestaurantStock'
          description: ''
    post:
      operationId: restaurant_api_v1_RestaurantStock_create
      description: ViewSet for the Restaurant's Store class
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantStock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RestaurantStock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RestaurantStock'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantStock'
          description: ''
  /restaurant/api/v1/RestaurantStock/{id}/:
    get:
      operationId: restaurant_api_v1_RestaurantStock_retrieve
      description: ViewSet for the Restaurant's Store class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant stock.
        required: true
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantStock'
          description: ''
    put:
      operationId: restaurant_api_v1_RestaurantStock_update
      description: ViewSet for the Restaurant's Store class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant stock.
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantStock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RestaurantStock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RestaurantStock'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantStock'
          description: ''
    patch:
      operationId: restaurant_api_v1_RestaurantStock_partial_update
      description: ViewSet for the Restaurant's Store class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant stock.
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRestaurantStock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRestaurantStock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRestaurantStock'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantStock'
          description: ''
    delete:
      operationId: restaurant_api_v1_RestaurantStock_destroy
      description: ViewSet for the Restaurant's Store class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant stock.
        required: true
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /restaurant/api/v1/RestaurantStore/:
    get:
      operationId: restaurant_api_v1_RestaurantStore_list
      description: ViewSet for the Restaurant's Store class
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestaurantStore'
          description: ''
    post:
      operationId: restaurant_api_v1_RestaurantStore_create
      description: ViewSet for the Restaurant's Store class
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantStore'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RestaurantStore'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RestaurantStore'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantStore'
          description: ''
  /restaurant/api/v1/RestaurantStore/{id}/:
    get:
      operationId: restaurant_api_v1_RestaurantStore_retrieve
      description: ViewSet for the Restaurant's Store class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant store.
        required: true
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantStore'
          description: ''
    put:
      operationId: restaurant_api_v1_RestaurantStore_update
      description: ViewSet for the Restaurant's Store class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant store.
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestaurantStore'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RestaurantStore'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RestaurantStore'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantStore'
          description: ''
    patch:
      operationId: restaurant_api_v1_RestaurantStore_partial_update
      description: ViewSet for the Restaurant's Store class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant store.
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRestaurantStore'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRestaurantStore'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRestaurantStore'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantStore'
          description: ''
    delete:
      operationId: restaurant_api_v1_RestaurantStore_destroy
      description: ViewSet for the Restaurant's Store class
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant store.
        required: true
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /restaurant/api/v1/Staff/:
    get:
      operationId: restaurant_api_v1_Staff_list
      description: ViewSet for the Staff class
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Staff'
          description: ''
    post:
      operationId: restaurant_api_v1_Staff_create
      description: ViewSet for the Staff class
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staff'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
  /restaurant/api/v1/Staff/{id}/:
    get:
      operationId: restaurant_api_v1_Staff_retrieve
      description: ViewSet for the Staff class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this staff.
        required: true
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
    put:
      operationId: restaurant_api_v1_Staff_update
      description: ViewSet for the Staff class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this staff.
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Staff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Staff'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
    patch:
      operationId: restaurant_api_v1_Staff_partial_update
      description: ViewSet for the Staff class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this staff.
        required: true
      tags:
      - restaurant
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStaff'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStaff'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStaff'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Staff'
          description: ''
    delete:
      operationId: restaurant_api_v1_Staff_destroy
      description: ViewSet for the Staff class
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this staff.
        required: true
      tags:
      - restaurant
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    BlankEnum:
      enum:
      - ''
    Category:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 30
        last_updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - last_updated
      - name
    Customer:
      type: object
      properties:
        last_name:
          type: string
          maxLength: 150
        last_updated:
          type: string
          format: date-time
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        address:
          type: string
          maxLength: 130
        first_name:
          type: string
          maxLength: 150
        city:
          type: integer
          nullable: true
      required:
      - address
      - created
      - last_updated
    DeliveryAgent:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 256
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone_number:
          type: string
          nullable: true
          maxLength: 128
        account_details:
          type: integer
          nullable: true
        address:
          type: integer
        face_capture:
          type: string
          format: uri
          nullable: true
        work_shift:
          nullable: true
        vehicle_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/VehicleTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        vehicle_brand:
          type: string
          nullable: true
          maxLength: 256
        plate_number:
          type: string
          nullable: true
          maxLength: 10
        drivers_license_id:
          type: string
          nullable: true
          maxLength: 20
        voters_number:
          type: string
          nullable: true
          maxLength: 12
        nin_number:
          type: string
          nullable: true
          maxLength: 11
        N_O_N_full_name:
          type: string
          nullable: true
          maxLength: 256
        N_O_N_phone_number:
          type: string
          nullable: true
          title: Next-of-kin's phone number
          maxLength: 128
        guarantor_first_name:
          type: string
          nullable: true
          maxLength: 20
        guarantor_last_name:
          type: string
          nullable: true
          maxLength: 20
        guarantor_phone_number:
          type: string
          nullable: true
          title: Guarantor's phone number
          maxLength: 128
        guarantor_occupation:
          type: string
          nullable: true
          maxLength: 30
      required:
      - address
      - email
    Ingredient:
      type: object
      properties:
        last_updated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 30
        created:
          type: string
          format: date-time
          readOnly: true
        menu_item:
          type: array
          items:
            type: integer
      required:
      - created
      - last_updated
      - menu_item
      - name
    Item:
      type: object
      properties:
        item_name:
          type: string
        category:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_of_measure:
          type: string
      required:
      - category
      - item_name
      - price
      - unit_of_measure
    Menu:
      type: object
      properties:
        date_from:
          type: string
          format: date
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 30
        date_to:
          type: string
          format: date
        last_updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - date_from
      - date_to
      - last_updated
      - name
    MenuItem:
      type: object
      properties:
        name:
          type: string
          maxLength: 30
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        menu:
          type: integer
      required:
      - created
      - last_updated
      - menu
      - name
      - price
    NullEnum:
      enum:
      - null
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        customer:
          type: string
          format: uuid
        restaurant:
          type: integer
        menu_item:
          type: integer
        add_on:
          type: integer
          nullable: true
        delivery_address:
          type: string
          maxLength: 130
        driver_note:
          type: string
          nullable: true
          maxLength: 256
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - customer
      - delivery_address
      - id
      - last_updated
      - menu_item
      - restaurant
    PatchedCategory:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 30
        last_updated:
          type: string
          format: date-time
          readOnly: true
    PatchedCustomer:
      type: object
      properties:
        last_name:
          type: string
          maxLength: 150
        last_updated:
          type: string
          format: date-time
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        address:
          type: string
          maxLength: 130
        first_name:
          type: string
          maxLength: 150
        city:
          type: integer
          nullable: true
    PatchedDeliveryAgent:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          maxLength: 256
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        phone_number:
          type: string
          nullable: true
          maxLength: 128
        account_details:
          type: integer
          nullable: true
        address:
          type: integer
        face_capture:
          type: string
          format: uri
          nullable: true
        work_shift:
          nullable: true
        vehicle_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/VehicleTypeEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        vehicle_brand:
          type: string
          nullable: true
          maxLength: 256
        plate_number:
          type: string
          nullable: true
          maxLength: 10
        drivers_license_id:
          type: string
          nullable: true
          maxLength: 20
        voters_number:
          type: string
          nullable: true
          maxLength: 12
        nin_number:
          type: string
          nullable: true
          maxLength: 11
        N_O_N_full_name:
          type: string
          nullable: true
          maxLength: 256
        N_O_N_phone_number:
          type: string
          nullable: true
          title: Next-of-kin's phone number
          maxLength: 128
        guarantor_first_name:
          type: string
          nullable: true
          maxLength: 20
        guarantor_last_name:
          type: string
          nullable: true
          maxLength: 20
        guarantor_phone_number:
          type: string
          nullable: true
          title: Guarantor's phone number
          maxLength: 128
        guarantor_occupation:
          type: string
          nullable: true
          maxLength: 30
    PatchedIngredient:
      type: object
      properties:
        last_updated:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 30
        created:
          type: string
          format: date-time
          readOnly: true
        menu_item:
          type: array
          items:
            type: integer
    PatchedItem:
      type: object
      properties:
        item_name:
          type: string
        category:
          type: string
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        unit_of_measure:
          type: string
    PatchedMenu:
      type: object
      properties:
        date_from:
          type: string
          format: date
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 30
        date_to:
          type: string
          format: date
        last_updated:
          type: string
          format: date-time
          readOnly: true
    PatchedMenuItem:
      type: object
      properties:
        name:
          type: string
          maxLength: 30
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        menu:
          type: integer
    PatchedOrder:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        customer:
          type: string
          format: uuid
        restaurant:
          type: integer
        menu_item:
          type: integer
        add_on:
          type: integer
          nullable: true
        delivery_address:
          type: string
          maxLength: 130
        driver_note:
          type: string
          nullable: true
          maxLength: 256
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
    PatchedRestaurant:
      type: object
      properties:
        address:
          type: string
          maxLength: 130
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 30
        last_updated:
          type: string
          format: date-time
          readOnly: true
        city:
          type: integer
          nullable: true
        owner:
          type: array
          items:
            type: string
            format: uuid
        custom_link:
          type: string
          nullable: true
          description: Custom link for your restaurant URL
          maxLength: 24
          pattern: ^[-a-zA-Z0-9_]+$
    PatchedRestaurantStock:
      type: object
      properties:
        category:
          type: integer
        name:
          type: string
          maxLength: 128
        image:
          type: string
          format: uri
        stock_type:
          type: string
          maxLength: 128
        purchasing_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        measuring_unit:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        restaurant:
          type: integer
    PatchedRestaurantStore:
      type: object
      properties:
        restaurant:
          type: integer
        name:
          type: string
          maxLength: 128
        description:
          type: string
          nullable: true
          maxLength: 256
        image:
          type: string
          format: uri
        section_name:
          type: string
          nullable: true
          maxLength: 128
    PatchedStaff:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        restaurants:
          type: integer
          nullable: true
    PatchedStock:
      type: object
      properties:
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        last_updated:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        item:
          type: string
          format: uuid
        SKU_number:
          type: string
          nullable: true
          maxLength: 60
        product_name:
          type: string
          nullable: true
          maxLength: 60
        product_image:
          type: string
          format: uri
        product_category:
          type: string
          nullable: true
          maxLength: 60
        manufacture_name:
          type: string
          nullable: true
          maxLength: 60
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        unit_available:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        size:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        discount_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
    PatchedSupplier:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 30
        owner:
          type: string
          format: uuid
        last_updated:
          type: string
          format: date-time
          readOnly: true
        city:
          type: array
          items:
            type: integer
        email:
          type: string
          format: email
          title: Email address
          maxLength: 256
        phone_number:
          type: string
          nullable: true
          maxLength: 128
        cac_reg_number:
          type: string
          nullable: true
          maxLength: 20
        cac_certificate:
          type: string
          format: uri
        business_license:
          type: string
          format: uri
          nullable: true
        category:
          type: array
          items:
            type: integer
        profile_img:
          type: string
          format: uri
          nullable: true
        cover_img:
          type: string
          format: uri
          nullable: true
        address:
          type: string
          maxLength: 130
    PatchedSupplyManager:
      type: object
      properties:
        last_updated:
          type: string
          format: date-time
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 256
        phone_number:
          type: string
          nullable: true
          maxLength: 128
        supply_business:
          type: string
          format: uuid
    PatchedUser:
      type: object
      properties:
        last_updated:
          type: string
          format: date-time
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 256
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          nullable: true
          pattern: ^[a-zA-Z0-9.@_]*$
          maxLength: 50
    Restaurant:
      type: object
      properties:
        address:
          type: string
          maxLength: 130
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 30
        last_updated:
          type: string
          format: date-time
          readOnly: true
        city:
          type: integer
          nullable: true
        owner:
          type: array
          items:
            type: string
            format: uuid
        custom_link:
          type: string
          nullable: true
          description: Custom link for your restaurant URL
          maxLength: 24
          pattern: ^[-a-zA-Z0-9_]+$
      required:
      - address
      - created
      - last_updated
      - name
      - owner
    RestaurantStock:
      type: object
      properties:
        category:
          type: integer
        name:
          type: string
          maxLength: 128
        image:
          type: string
          format: uri
        stock_type:
          type: string
          maxLength: 128
        purchasing_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        measuring_unit:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        restaurant:
          type: integer
      required:
      - category
      - image
      - measuring_unit
      - name
      - purchasing_price
      - quantity
      - restaurant
      - stock_type
    RestaurantStore:
      type: object
      properties:
        restaurant:
          type: integer
        name:
          type: string
          maxLength: 128
        description:
          type: string
          nullable: true
          maxLength: 256
        image:
          type: string
          format: uri
        section_name:
          type: string
          nullable: true
          maxLength: 128
      required:
      - image
      - name
      - restaurant
    Staff:
      type: object
      properties:
        created:
          type: string
          format: date-time
          readOnly: true
        last_updated:
          type: string
          format: date-time
          readOnly: true
        restaurants:
          type: integer
          nullable: true
      required:
      - created
      - last_updated
    Stock:
      type: object
      properties:
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        last_updated:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        item:
          type: string
          format: uuid
        SKU_number:
          type: string
          nullable: true
          maxLength: 60
        product_name:
          type: string
          nullable: true
          maxLength: 60
        product_image:
          type: string
          format: uri
        product_category:
          type: string
          nullable: true
          maxLength: 60
        manufacture_name:
          type: string
          nullable: true
          maxLength: 60
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        unit_available:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        size:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        weight:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
        discount_percentage:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          nullable: true
      required:
      - created
      - id
      - item
      - last_updated
      - quantity
    Supplier:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 30
        owner:
          type: string
          format: uuid
        last_updated:
          type: string
          format: date-time
          readOnly: true
        city:
          type: array
          items:
            type: integer
        email:
          type: string
          format: email
          title: Email address
          maxLength: 256
        phone_number:
          type: string
          nullable: true
          maxLength: 128
        cac_reg_number:
          type: string
          nullable: true
          maxLength: 20
        cac_certificate:
          type: string
          format: uri
        business_license:
          type: string
          format: uri
          nullable: true
        category:
          type: array
          items:
            type: integer
        profile_img:
          type: string
          format: uri
          nullable: true
        cover_img:
          type: string
          format: uri
          nullable: true
        address:
          type: string
          maxLength: 130
      required:
      - address
      - cac_certificate
      - category
      - city
      - created
      - email
      - id
      - last_updated
      - name
      - owner
    SupplyManager:
      type: object
      properties:
        last_updated:
          type: string
          format: date-time
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        id:
          type: string
          format: uuid
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 256
        phone_number:
          type: string
          nullable: true
          maxLength: 128
        supply_business:
          type: string
          format: uuid
      required:
      - created
      - email
      - id
      - last_updated
      - supply_business
    User:
      type: object
      properties:
        last_updated:
          type: string
          format: date-time
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 256
        id:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          nullable: true
          pattern: ^[a-zA-Z0-9.@_]*$
          maxLength: 50
      required:
      - created
      - email
      - id
      - last_updated
    VehicleTypeEnum:
      enum:
      - bicycle
      - motorcycle
      - car
      - bus
      - truck
      type: string
      description: |-
        * `bicycle` - Bicycle
        * `motorcycle` - Motoroycle
        * `car` - Car
        * `bus` - Bus
        * `truck` - Truck
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
